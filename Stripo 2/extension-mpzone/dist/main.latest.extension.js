!function(n){var t={};function e(o){if(t[o])return t[o].exports;var l=t[o]={i:o,l:!1,exports:{}};return n[o].call(l.exports,l,l.exports,e),l.l=!0,l.exports}e.m=n,e.c=t,e.d=function(n,t,o){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:o})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var l in n)e.d(o,l,function(t){return n[t]}.bind(null,l));return o},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="/",e(e.s=0)}([function(n,t,e){n.exports=e(1)},function(n,t,e){"use strict";e.r(t);var o={name:null,iconClass:null,uniqueClassName:null,canBeSavedToLibrary:!1,settingsCssPath:null,previewCssPath:null,i18n:{},blockName:null,emptyContainerIcon:!1,blockType:null,blockConfigAttributeNames:[],controlsToCreate:[],blockControls:[],isEnabled:function(){return!0},emailInitialized:function(n){},onSelectBlock:function(n){},getBlockLayoutToDrop:function(){return"<td>Default block</td>"},blockDropped:function(n){},getBlockLabel:function(n){return"Default block"},getDefaultSettingsPanelState:function(n){return{}},onCleanLayout:function(n,t){},onBlockCopy:function(n,t){}},l="".concat("mpZoneBlock","_zoneName_control"),a="".concat("mpZoneBlock","_zoneWidth_control"),i="".concat("mpZoneBlock","_zoneHeight_control"),s="".concat("mpZoneBlock","_zoneAlign_control"),r={en:{"block.name":"MP Zone","settings.controls.zoneNameText.label":"Messagepoint Zone Name","settings.controls.zoneWidth.label":"Width","settings.controls.zoneHeight.label":"Height","settings.controls.zoneAlign.label":"Alignment"},ru:{"block.name":"Зона сообщений","settings.controls.zoneNameText.label":"Название зоны","settings.controls.zoneWidth.label":"Ширина","settings.controls.zoneHeight.label":"Высота","settings.controls.zoneAlign.label":"Выравнивание"}},c={name:l,width:a,height:i,alignment:s,render:function(){console.log("I GOT HERE"),this.jImage=this.jElement.find("img"),this.jTable=this.jElement.find("table"),console.log(this.jImage.attr("alt")),console.log(this.jTable.attr("width")),console.log(this.jTable.attr("height")),console.log(this.jTable.attr("align")),this.jContainer.html(this.getBlockMarkup()),this.jAltInput=this.jContainer.find("#mbZoneName"),this.jAltInput.on("change",this.onNameChange.bind(this)),this.jWidthInput=this.jContainer.find("#mbZoneWidth"),this.jWidthInput.on("change",this.onWidthChange.bind(this)),this.jHeightInput=this.jContainer.find("#mbZoneHeight"),this.jHeightInput.on("change",this.onHeightChange.bind(this)),this.jAlignInput=this.jContainer.find("#mbZoneAlign"),this.jAlignInput.on("change",this.onAlignChange.bind(this))},onDeactivate:function(){this.jAltInput.off("change")},isControlVisible:function(){return!0},onNameChange:function(n){this.jImage.attr("alt",n.target.value||""),this.jElement.find("span").html(n.target.value),this.applyChanges()},onWidthChange:function(n){this.jTable.attr("width",n.target.value||""),this.applyChanges()},onHeightChange:function(n){this.jTable.attr("height",n.target.value||""),this.applyChanges()},onAlignChange:function(n){this.jTable.attr("align",n.target.value||"")},getBlockMarkup:function(){return'\n            <div class="form-group">\n                <div class="col-xs-12">\n                    <label for="mbZoneName">'.concat(this.extension.stripoApi.translate("settings.controls.zoneNameText.label"),'</label>\n                    <input id="mbZoneName" type="text" class="form-control" value="').concat(this.jImage.attr("alt")||"",'">\n\n\n\n                    <div class="form-group esdev-paddings-block" false="">\n                        <label class="col-xs-4 col-sm-4 col-md-5 col-lg-4 control-label esdev-no-padding-right">').concat(this.extension.stripoApi.translate("settings.controls.zoneWidth.label"),'</label>\n                        <div class="col-sm-8 col-xs-8">\n                            <div class="input-group esdev-count-range pull-right" id="mbZoneWidth">\n                                <span class="input-group-btn">\n                                    <button class="btn btn-default minus" type="button"><span class="es-icon-minus"></span></button>\n                                </span>\n                                <input type="number" class="form-control padding-val text-center" value="').concat(this.jTable.attr("width")||"",'" step="5">\n                                <span class="input-group-btn">\n                                    <button class="btn btn-default plus" type="button"><span class="es-icon-plus"></span></button>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="form-group esdev-paddings-block" false="">\n                        <label class="col-xs-4 col-sm-4 col-md-5 col-lg-4 control-label esdev-no-padding-right">').concat(this.extension.stripoApi.translate("settings.controls.zoneHeight.label"),'</label>\n                        <div class="col-sm-8 col-xs-8">\n                            <div class="input-group esdev-count-range pull-right" id="mbZoneHeight">\n                                <span class="input-group-btn">\n                                    <button class="btn btn-default minus" type="button"><span class="es-icon-minus"></span></button>\n                                </span>\n                                <input type="number" class="form-control padding-val text-center" value="').concat(this.jTable.attr("height")||"",'" step="5">\n                                <span class="input-group-btn">\n                                    <button class="btn btn-default plus" type="button"><span class="es-icon-plus"></span></button>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <label for="mbZoneAlign">').concat(this.extension.stripoApi.translate("settings.controls.zoneAlign.label"),'</label>\n                    <input id="mbZoneAlign" type="text" class="form-control" value="').concat(this.jTable.attr("align")||"",'">\n\n                    <div class="form-group esdev-test-align-control">\n                                      <label for="mbZoneAlign" class="col-xs-4 control-label esdev-no-padding-right desktop-align-label text-overflow">\n                                        Alignment\n                                       </label>\n\n                                      <div class="col-xs-8 text-right">\n\n                                          <div class="btn-group desktop-aligning" data-toggle="buttons">\n                                              <label class="btn btn-default label-align-left">\n                                                  <input type="radio" name="options" id="option1" autocomplete="off"><span class="es-icon-img-align-left"></span>\n                                              </label>\n                                              <label class="btn btn-default label-align-center">\n                                                  <input type="radio" name="options" id="option2" autocomplete="off" checked=""><span class="es-icon-img-align-center"></span>\n                                              </label>\n                                              <label class="btn btn-default label-align-right">\n                                                  <input type="radio" name="options" id="option3" autocomplete="off"><span class="es-icon-img-align-right"></span>\n                                              </label>\n                                          </div>\n\n                                      </div>\n                                  </div>\n                </div>\n            </div>')}},u='<table  align="center" cellpadding="0" cellspacing="0" style="background-color:#7c1a87;">\n    <tbody>\n      <tr>\n        <td align="center">\n          <img src="#IMAGE_BASE_PATH#/assets/images/MPLogo.png" alt="MP ZONE NAME PLACEHOLDER" width="96px" height="96px" />\n        </td>\n      </tr>\n      <tr>\n        <td align="center" >\n          <span style="color:#FFFFFF;">MP ZONE NAME PLACEHOLDER</span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n';function g(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,o)}return e}function p(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?g(Object(e),!0).forEach((function(t){b(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):g(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function b(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}var d={create:function(n,t,e){return Object.assign(p(p({stripoConfig:n,stripoApi:t,extensionBasePath:e},o),function(n,t,e){return{name:"MPZoneBlockExtension",iconClass:"icon-mplogo",uniqueClassName:"esd-mp-zone-block",canBeSavedToLibrary:!1,settingsCssPath:"/assets/css/settings.css",previewCssPath:"/assets/css/preview.css",i18n:r,blockName:"block.name",emptyContainerIcon:!1,blockType:"block",controlsToCreate:[{control:c}],blockControls:[l],getBlockLayoutToDrop:function(){return console.log("getBlockLayoutToDrop"),u.replace(/#IMAGE_BASE_PATH#/g,e)},getBlockLabel:function(n){return console.log("getBlockLabel"),t.translate("block.name")},emailInitialized:function(n){console.log("jobName Start Here"),n.find(".".concat("esd-mp-zone-block")).each((function(){var n=t.jQuery(this),o=n.find("img").attr("alt");o||(o="MP Zone Name");var l=n.find("img").attr("width");l||(l="100");var a=n.find("img").attr("height");a||(a="100");var i=n.attr("align");console.log(i),i||(i="center"),console.log("jobName: "+o+" "+l+" "+a+" "+i),n.html(u.replace(/#IMAGE_BASE_PATH#/g,e)),n.find("img").attr("alt",o),n.find("table").attr("width",l),n.find("table").attr("height",a),n.find("table").attr("align",i),n.attr("align",""),n.find("span").html(o)}))},onCleanLayout:function(n,t){console.log("onCleanLayout"),n.find(".".concat("esd-mp-zone-block")).each((function(){var n=t(this,null,null,{decodeEntities:!1}),e=n.find("img").attr("alt");if(e){console.log("onClean "+e);var o=n.find("table").attr("width"),l=n.find("table").attr("height"),a=n.find("table").attr("align");n.attr("align",a),n.html('<img src="https://images/messagepoint_zone.gif" width="'+o+'" height="'+l+'" alt="'+e+'"title="'+e+'" >')}}))}}}(0,t,e)))}};self.MpZoneBlockExtension=d}]);