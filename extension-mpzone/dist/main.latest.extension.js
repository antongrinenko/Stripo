!function(e){var t={};function n(l){if(t[l])return t[l].exports;var o=t[l]={i:l,l:!1,exports:{}};return e[l].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,l){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:l})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(n.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(l,o,function(t){return e[t]}.bind(null,o));return l},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){"use strict";n.r(t);var l={name:null,iconClass:null,uniqueClassName:null,canBeSavedToLibrary:!1,settingsCssPath:null,previewCssPath:null,i18n:{},blockName:null,emptyContainerIcon:!1,blockType:null,blockConfigAttributeNames:[],controlsToCreate:[],blockControls:[],isEnabled:()=>!0,emailInitialized(e){},onSelectBlock(e){},getBlockLayoutToDrop:()=>"<td>Default block</td>",blockDropped(e){},getBlockLabel:e=>"Default block",getDefaultSettingsPanelState:e=>({}),onCleanLayout(e,t){},onBlockCopy(e,t){}};var o={en:{"block.name":"MP Zone","settings.controls.zoneNameText.label":"Messagepoint Zone Name","settings.controls.zoneWidth.label":"Width","settings.controls.zoneHeight.label":"Height","settings.controls.zoneAlign.label":"Alignment"},ru:{"block.name":"Зона сообщений","settings.controls.zoneNameText.label":"Название зоны","settings.controls.zoneWidth.label":"Ширина","settings.controls.zoneHeight.label":"Высота","settings.controls.zoneAlign.label":"Выравнивание"}},i={name:"mpZoneBlock_zoneName_control",BLOCK_UNIQUE_CLASS_LABEL:"esd-mp-zone-label",render(){this.jImage=this.jElement.find("img"),this.jLabel=this.jElement.find('span[class="esd-mp-zone-label"]'),this.jContainer.html(this.getBlockMarkup()),this.jAltInput=this.jContainer.find("#mbZoneName"),this.jAltInput.on("change",this.onChange.bind(this))},onDeactivate(){this.jAltInput.off("change")},isControlVisible:()=>!0,onChange(e){this.jImage.attr("alt",e.target.value||""),this.jLabel.html(e.target.value||""),this.applyChanges()},getBlockMarkup(){return`\n            <div class="form-group">\n                <div class="col-xs-12">\n                    <label for="mbZoneName">${this.extension.stripoApi.translate("settings.controls.zoneNameText.label")}</label>\n                    <input id="mbZoneName" type="text" class="form-control" value="${this.jImage.attr("alt")||""}">\n                </div>\n            </div>`}},a={name:"mpZoneBlock_zoneWidth_control",render(){this.controlElement=this.jElement.find("table"),this.jContainer.html(this.getControlMarkup()),this.numberSelector=this.jContainer.find("number-selector")[0],this.numberSelector.props.value=this.controlElement.width(),this.numberSelector.props.onChange=this.onChange.bind(this)},onChange(e){this.numberSelector.props.value=e,this.controlElement.width(e),this.applyChanges()},getControlMarkup(){return`<number-selector label="${this.extension.stripoApi.translate("settings.controls.zoneWidth.label")}"\n            min="50" max="600" step="10"></number-selector>`}},s={name:"mpZoneBlock_zoneHeight_control",render(){this.controlElement=this.jElement.find("table"),this.jContainer.html(this.getControlMarkup()),this.numberSelector=this.jContainer.find("number-selector")[0],this.numberSelector.props.value=this.controlElement.height(),this.numberSelector.props.onChange=this.onChange.bind(this)},onChange(e){this.numberSelector.props.value=e,this.controlElement.height(e),this.applyChanges()},getControlMarkup(){return`<number-selector label="${this.extension.stripoApi.translate("settings.controls.zoneHeight.label")}"\n            min="50" max="600" step="10"></number-selector>`}},r={name:"mpZoneBlock_zoneAlign_control",render(){this.controlElement=this.jElement.find("table");this.controlElement.attr("align");this.jContainer.html(this.getControlMarkup()),this.jAlignControl=this.jContainer.find('.desktop-aligning input[name="elementAlign"]'),this.jAlignControl.on("change",this.onChange.bind(this))},onChange(e){this.controlElement.attr("align",e.target.value||"center"),this.applyChanges()},onDeactivate(){this.jAlignControl.off("change")},getControlMarkup(){const e=this.controlElement.attr("align")||"center";return`\n              <div class="form-group esdev-test-align-control">\n                  <label for="imageAlign" class="col-xs-4 control-label esdev-no-padding-right desktop-align-label text-overflow">\n                    ${this.extension.stripoApi.translate("settings.controls.zoneAlign.label")}\n                   </label>\n                  <div class="col-xs-8 text-right">\n                      <div class="btn-group desktop-aligning" data-toggle="buttons">\n                          <label class="btn btn-default label-align-left ${"left"==e?"active":""}">\n                              <input type="radio" name="elementAlign" value="left" autocomplete="off" ${"left"==e?'checked="" ':""}>\n                              <span class="es-icon-img-align-left"></span>\n                          </label>\n                          <label class="btn btn-default label-align-center ${"center"==e?"active":""}">\n                              <input type="radio" name="elementAlign" value="center" autocomplete="off" ${"center"==e?'checked="" ':""}>\n                              <span class="es-icon-img-align-center"></span>\n                          </label>\n                          <label class="btn btn-default label-align-right ${"right"==e?"active":""}">\n                              <input type="radio" name="elementAlign" value="right" autocomplete="off" ${"right"==e?'checked="" ':""}>\n                              <span class="es-icon-img-align-right"></span>\n                          </label>\n                      </div>\n                  </div>\n              </div>`}},c='<td>\n<table  align="center" cellpadding="0" cellspacing="0" style="background-color:#7c1a87;">\n    <tbody>\n    <tr>\n      <td align="center">\n        <img src="#IMAGE_BASE_PATH#/assets/images/MPLogo.png" alt="MP ZONE NAME PLACEHOLDER" width="96px" height="96px" />\n      </td>\n    </tr>\n    <tr>\n      <td align="center" >\n        <span class="esd-mp-zone-label" style="color:#FFFFFF;">MP ZONE NAME PLACEHOLDER</span>\n      </td>\n    </tr>\n    </tbody>\n</table>\n</td>\n';function g(e,t,n){return{name:"MPZoneBlockExtension",iconClass:"icon-mplogo",uniqueClassName:"esd-mp-zone-block",canBeSavedToLibrary:!1,settingsCssPath:"/assets/css/settings.css",previewCssPath:"/assets/css/preview.css",i18n:o,blockName:"block.name",emptyContainerIcon:!1,blockType:"block",controlsToCreate:[{control:i},{control:a},{control:s},{control:r}],blockControls:["mpZoneBlock_zoneName_control","mpZoneBlock_zoneWidth_control","mpZoneBlock_zoneHeight_control","mpZoneBlock_zoneAlign_control"],getBlockLayoutToDrop:function(){return c.replace(/#IMAGE_BASE_PATH#/g,n)},getBlockLabel:function(e){return t.translate("block.name")},emailInitialized:function(e){e.find(".esd-mp-zone-block").each((function(){const e=t.jQuery(this);var l=e.find("img").attr("alt");l||(l="MP Zone Name");var o=e.find("img").attr("width");o||(o="100");var i=e.find("img").attr("height");i||(i="100");var a=e.attr("align");a||(a="center"),e.find("img").replaceWith(c.replace(/#IMAGE_BASE_PATH#/g,n)),e.find("img").attr("alt",l),e.find("img").attr("width","96px"),e.find("img").attr("height","96px"),e.find("table").attr("align",a),e.find("img").attr("align","center");var s=e.find("table").attr("style").split(";");s.push("width:"+o),s.push("height:"+i);var r=s.join(";");e.find("table").attr("style",r),e.find('span[class="esd-mp-zone-label"]').html(l)}))},onCleanLayout:function(e,t){e.find(".esd-mp-zone-block").each((function(){const e=t(this,null,null,{decodeEntities:!1}).parent();var n=e.find("img").attr("alt");if(n){for(var l=e.find("table").attr("style").split(";"),o="",i="",a=0;a<l.length;a++)"width"==l[a].split(":")[0].trim()&&(o=(o=l[a].split(":")[1].trim()).replace("px","")),"height"==l[a].split(":")[0].trim()&&(o=(i=l[a].split(":")[1].trim()).replace("px",""),i=i.replace("px",""));const t=e.find("table").attr("align");e.html('<td class="esd-mp-zone-block" align="'+t+'"><img src="https://images/messagepoint_zone.gif" width="'+o+'" height="'+i+'" alt="'+n+'"title="'+n+'" /></td>')}}))}}}const h={create:(e,t,n)=>Object.assign({stripoConfig:e,stripoApi:t,extensionBasePath:n,...l,...g(0,t,n)})};self.MpZoneBlockExtension=h}]);